apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion //编译版本
    buildToolsVersion rootProject.ext.android.buildToolsVersion //构建工具版本
    useLibrary 'org.apache.http.legacy'

    //配置默认信息
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        //运行脚本 -> 搭建Espresso步骤1
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        flavorDimensions "versionCode"
//        ndk {
//            moduleName "JniTest" //模组名称
//            abiFilters "armeabi", "armeabi-v7a", "x86" //支持的平台
//            ldLibs "EGL", "GLESv3", "dl", "log" //链接的库
//        }
        vectorDrawables.useSupportLibrary = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    //配置相关源文件位置
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }
    //配置签名信息
    signingConfigs {
        def Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('../local.properties')))
        def Properties keyProps = new Properties()

        //if can not find the property of keystore.props.file , then using debug.keystore
//        if (localProps['keystore.props.file']) {
//            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
//        } else {
        keyProps["store"] = '../buildsystem/wisdom-parking.jks'
        keyProps["storePass"] = '123456'
        keyProps["alias"] = 'wisdom-parking'
        keyProps["pass"] = '123456'
//        }

        debug {
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }

        release {
            // release版本使用assert确保存在该属性 否则报错，避免错误打包
            //assert localProps['keystore.props.file'];
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }
    //配置构建类型
    buildTypes {
        debug {
            signingConfig signingConfigs.debug

            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "_Debug"]
            manifestPlaceholders = [IS_DEBUG: "yes"]
        }

        release {
            manifestPlaceholders = [IS_DEBUG: "no"]

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release // package cmd：gradlew assembleRelease

            applicationVariants.all { variant ->
                variant.outputs.all {
                    if (variant.buildType.name.equals('release')) {
                        def fileName = "smart_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk"
                        outputFileName = fileName
                    }
                }
            }
            productFlavors.all { flavor ->
                manifestPlaceholders.put("UMENG_CHANNEL_VALUE", name)
            }
        }
    }
    //配置产品风格信息
    productFlavors {
//        Anzhi {}
//        Baidu {}
//        Huawei {}
//        Meizu {}
//        Vivo {}
//        Wandoujia {}
//        _360 {}
//        Tencent {}
//        PP {}
//        Xiaomi {}
//        Oppo {}
    }
    //设置测试相关属性
    testOptions {}
    //设置aapt属性
    aaptOptions {}
    //设置lint属性
    lintOptions {
        abortOnError rootProject.ext.android.abortOnLintError

        checkReleaseBuilds rootProject.ext.android.checkLintRelease
        quiet true
        ignoreWarnings true
        //some libraries have issues with this
        disable 'InvalidPackage'
        //Lint gives this warning but SDK 20 would be Android L beta
        disable 'OldTargetApi'
    }
    //设置编译相关属性
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    //设置APK包相关属性
    packagingOptions { //排除干扰打包项 -> 搭建Espresso步骤2
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    def presentationDependencies = rootProject.ext.presentationDependencies
    def developmentDebugDependencies = rootProject.ext.developmentDebugDependencies
    def developmentReleaseDependencies = rootProject.ext.developmentReleaseDependencies
    //Support
//    implementation presentationDependencies.libSupportV13
    implementation presentationDependencies.libSupportAppcompat
    implementation presentationDependencies.libSupportDesign
    implementation presentationDependencies.libSupportCardView
    implementation presentationDependencies.libSupportPalette
    implementation presentationDependencies.libSupportRecyclerview
    //OkHttp
    //    implementation presentationDependencies.libOkHttp
    //    implementation presentationDependencies.libOkHttpLoggingInterceptor
    //    implementation presentationDependencies.libStetho
    //    implementation presentationDependencies.libOkStetho
    //Chuck
    //    debugImplementation presentationDependencies.libChuck
    //    releaseImplementation presentationDependencies.libChuckNoOp
    //Retrofit
    //    implementation presentationDependencies.libRetrofit
    //    implementation presentationDependencies.libRetrofitConverterGson
    //    implementation presentationDependencies.libRetrofitAdapterRxJava
    //ButterKnife
    implementation presentationDependencies.libButterKnife
    annotationProcessor presentationDependencies.libButterKnifeCompiler
    //Rx
    //    implementation presentationDependencies.libRxAndroid
    //    implementation presentationDependencies.libRxJava
    //Dagger
    //    implementation presentationDependencies.libAnnotationApi
    //    implementation presentationDependencies.libDagger
    //    apt presentationDependencies.libDaggerCompiler
    //otto
    //    implementation presentationDependencies.libOtto
    //fresco
    //        implementation presentationDependencies.libFresco
    //        implementation presentationDependencies.libFrescoImagePipeLine
    //        implementation presentationDependencies.libFrescoGif
    //app custom dependencies
    //    implementation presentationDependencies.libAutoLayout
    //    implementation presentationDependencies.libSlider
    //file downloader
    //    implementation presentationDependencies.libFileDownloader
    //Logger
    //    implementation presentationDependencies.libLogger
    //leakcanary
//    debugImplementation developmentDebugDependencies.libLeakCanary
//    releaseImplementation developmentReleaseDependencies.libLeakCanary
    implementation project(':i-carlib')
    implementation files('libs/Amap_2DMap_V4.2.0_20170209.jar')
//    implementation files('libs/umeng-analytics-v6.0.9.jar')
    //widget
    //noinspection GradleCompatible
    implementation files('libs/nineoldandroids-library-2.4.0.jar')
    implementation('com.github.hotchemi:permissionsdispatcher:2.4.0') {
        exclude module: 'support-v13'
    }
    implementation files('libs/AMap_Location_V3.3.0_20170118.jar')
    //noinspection GradleCompatible
    //implementation 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    implementation files('libs/AMap3DMap_6.2.0_AMapNavi_6.1.0_20180427.jar')
    implementation files('libs/Msc.jar')
    implementation project(':zxing')
    implementation files('libs/commons-lang.jar')
    implementation 'com.android.support:support-vector-drawable:25.3.1'
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'
    implementation 'com.just.agentweb:agentweb:2.0.1'
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    implementation 'com.github.PingerOne:SwipeRecyclerView:1.0.5'
    implementation 'pub.devrel:easypermissions:0.2.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.alibaba:fastjson:1.1.56.android'
    implementation 'com.yanzhenjie:permission:2.0.0-rc4'
    testImplementation 'junit:junit:4.12'
    implementation 'com.orhanobut:dialogplus:1.11@aar'
    implementation files('libs/pinyin4j-2.5.0.jar')
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
