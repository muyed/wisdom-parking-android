apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError rootProject.ext.android.abortOnLintError
        checkReleaseBuilds rootProject.ext.android.checkLintRelease
        ignoreWarnings rootProject.ext.android.ignoreWarnings
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
        // Due to Robolectric that modifies the manifest when running tests
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            aidl.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
//        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    api dataDependencies.libSupportAppcompat
    api dataDependencies.libSupportV4
    api dataDependencies.libSupportDesign
    api dataDependencies.libSupportRecyclerview
    api dataDependencies.libGson
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation files('libs/asmack.jar')
    implementation files('libs/libammsdk.jar')
    implementation files('libs/qq_mta-sdk-1.6.2.jar')
    //    implementation files('libs/weiboSDKCore_3.1.4.jar')
    //noinspection GradleCompatible
    implementation 'com.android.support:multidex:1.0.2'
    api 'com.lzy.net:okgo:2.1.4'
    api 'com.github.bumptech.glide:glide:3.7.0'
    api 'com.youth.banner:banner:1.4.10'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:1.4.0'
//    implementation 'com.sina.weibo.sdk:core:1.0.0:openDefaultRelease@aar'
    api 'com.mcxiaoke.volley:library:1.0.19'
    api 'com.squareup.retrofit2:retrofit:2.2.0'
    //    implementation files('libs/alipaySdk-20170922.jar')
    //    implementation files('libs/alipay-sdk-java20180309170622.jar')
    api files('libs/bcprov-jdk15on-1.54.jar')
    //    implementation files('libs/alipaySdk-20170309.jar')
//    implementation files('libs/alipaySDK-20150818.jar')
    api files('libs/alipaySdk-20180403.jar')
}

